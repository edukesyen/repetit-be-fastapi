"""update relationship

Revision ID: adfee081ea73
Revises: 080e7b94fc83
Create Date: 2024-06-19 02:22:47.286422

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'adfee081ea73'
down_revision: Union[str, None] = '080e7b94fc83'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop foreign key constraints
    op.drop_constraint('topics_user_id_fkey', 'topics', type_='foreignkey')
    
    # Drop indexes and tables
    op.drop_index('ix_topics_name', table_name='topics')
    op.drop_table('topics')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Recreate tables and indexes
    op.create_table('users',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('nickname', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column('role', sa.Enum('ADMIN', 'STUDENT', 'MENTOR', name='userrole'), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    
    op.create_table('topics',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='topics_user_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='topics_pkey')
    )
    op.create_index('ix_topics_name', 'topics', ['name'], unique=False)
    # ### end Alembic commands ###


# def upgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_index('ix_users_email', table_name='users')
#     op.drop_table('users')
#     op.drop_index('ix_topics_name', table_name='topics')
#     op.drop_table('topics')
#     # ### end Alembic commands ###


# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_table('topics',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
#     sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
#     sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='topics_user_id_fkey'),
#     sa.PrimaryKeyConstraint('id', name='topics_pkey')
#     )
#     op.create_index('ix_topics_name', 'topics', ['name'], unique=False)
#     op.create_table('users',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('nickname', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
#     sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
#     sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
#     sa.Column('role', postgresql.ENUM('ADMIN', 'STUDENT', 'MENTOR', name='userrole'), autoincrement=False, nullable=True),
#     sa.PrimaryKeyConstraint('id', name='users_pkey')
#     )
#     op.create_index('ix_users_email', 'users', ['email'], unique=True)
#     # ### end Alembic commands ###
